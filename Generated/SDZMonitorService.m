/*
	SDZMonitorService.m
	The implementation classes and methods for the MonitorService web service.
	Generated by SudzC.com
*/

#import "SDZMonitorService.h"
				
#import "Soap.h"
	

/* Implementation of the service */
				
@implementation SDZMonitorService

	- (id) init
	{
		if(self = [super init])
		{
			self.serviceUrl = @"http://192.168.3.104/HCServer/services/MonitorService";
			self.namespace = @"http://soap.monitor/";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (SDZMonitorService*) service {
		return [SDZMonitorService serviceWithUsername:nil andPassword:nil];
	}
	
	+ (SDZMonitorService*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[SDZMonitorService alloc] initWithUsername:username andPassword:password];
	}

		
	/* Returns NSString*.  */
	- (SoapRequest*) getRooms: (id <SoapDelegate>) handler hotelid: (int) hotelid
	{
		return [self getRooms: handler action: nil hotelid: hotelid];
	}

	- (SoapRequest*) getRooms: (id) _target action: (SEL) _action hotelid: (int) hotelid
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: hotelid] forName: @"hotelid"]];
		NSString* _envelope = [Soap createEnvelope: @"getRooms" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

/* Returns NSString*.  */
    - (SoapRequest*) getLoginCode: (id <SoapDelegate>) handler phone: (NSString*) phone
    {
        return [self getLoginCode: handler action: nil phone: phone];
    }

    - (SoapRequest*) getLoginCode: (id) _target action: (SEL) _action phone: (NSString*) phone
    {
        NSMutableArray* _params = [NSMutableArray array];
    
        [_params addObject: [[SoapParameter alloc] initWithValue: phone forName: @"phone"]];
        NSString* _envelope = [Soap createEnvelope: @"getLoginCode" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
        SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
        [_request send];
        return _request;
    }

	/* Returns NSString*.  */
	- (SoapRequest*) getMachineMonitor: (id <SoapDelegate>) handler machineid: (long) machineid time: (int) time
	{
		return [self getMachineMonitor: handler action: nil machineid: machineid time: time];
	}

	- (SoapRequest*) getMachineMonitor: (id) _target action: (SEL) _action machineid: (long) machineid time: (int) time
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithLong: machineid] forName: @"machineid"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: time] forName: @"time"]];
		NSString* _envelope = [Soap createEnvelope: @"getMachineMonitor" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) listArea: (id <SoapDelegate>) handler
	{
		return [self listArea: handler action: nil];
	}

	- (SoapRequest*) listArea: (id) _target action: (SEL) _action
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		NSString* _envelope = [Soap createEnvelope: @"listArea" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) getAlertLog: (id <SoapDelegate>) handler hotelid: (int) hotelid start: (int) start limit: (int) limit
	{
		return [self getAlertLog: handler action: nil hotelid: hotelid start: start limit: limit];
	}

	- (SoapRequest*) getAlertLog: (id) _target action: (SEL) _action hotelid: (int) hotelid start: (int) start limit: (int) limit
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: hotelid] forName: @"hotelid"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: start] forName: @"start"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: limit] forName: @"limit"]];
		NSString* _envelope = [Soap createEnvelope: @"getAlertLog" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) getHotelInfo: (id <SoapDelegate>) handler hotelid: (int) hotelid
	{
		return [self getHotelInfo: handler action: nil hotelid: hotelid];
	}

	- (SoapRequest*) getHotelInfo: (id) _target action: (SEL) _action hotelid: (int) hotelid
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: hotelid] forName: @"hotelid"]];
		NSString* _envelope = [Soap createEnvelope: @"getHotelInfo" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
    - (SoapRequest*) login: (id <SoapDelegate>) handler phone: (NSString*) phone psw: (NSString*) psw type: (int) type
    {
        return [self login: handler action: nil phone: phone psw: psw type: type];
    }

    - (SoapRequest*) login: (id) _target action: (SEL) _action phone: (NSString*) phone psw: (NSString*) psw type: (int) type
    {
        NSMutableArray* _params = [NSMutableArray array];
    
        [_params addObject: [[SoapParameter alloc] initWithValue: phone forName: @"phone"]];
        [_params addObject: [[SoapParameter alloc] initWithValue: psw forName: @"psw"]];
        [_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: type] forName: @"type"]];
        NSString* _envelope = [Soap createEnvelope: @"login" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
        SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
        [_request send];
        return _request;
    }

	/* Returns NSString*.  */
	- (SoapRequest*) aa: (id <SoapDelegate>) handler a: (NSString*) a
	{
		return [self aa: handler action: nil a: a];
	}

	- (SoapRequest*) aa: (id) _target action: (SEL) _action a: (NSString*) a
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: a forName: @"a"]];
		NSString* _envelope = [Soap createEnvelope: @"aa" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}

	/* Returns NSString*.  */
	- (SoapRequest*) getHistoryRooms: (id <SoapDelegate>) handler hotelid: (int) hotelid mac: (NSString*) mac sbegin: (NSString*) sbegin send: (NSString*) send start: (int) start limit: (int) limit
	{
		return [self getHistoryRooms: handler action: nil hotelid: hotelid mac: mac sbegin: sbegin send: send start: start limit: limit];
	}

	- (SoapRequest*) getHistoryRooms: (id) _target action: (SEL) _action hotelid: (int) hotelid mac: (NSString*) mac sbegin: (NSString*) sbegin send: (NSString*) send start: (int) start limit: (int) limit
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: hotelid] forName: @"hotelid"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: mac forName: @"mac"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: sbegin forName: @"sbegin"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: send forName: @"send"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: start] forName: @"start"]];
		[_params addObject: [[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: limit] forName: @"limit"]];
		NSString* _envelope = [Soap createEnvelope: @"getHistoryRooms" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @"NSString"];
		[_request send];
		return _request;
	}


@end
	